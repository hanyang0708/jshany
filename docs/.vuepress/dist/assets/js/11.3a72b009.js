(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{282:function(v,_,l){"use strict";l.r(_);var t=l(38),e=Object(t.a)({},function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h4",{attrs:{id:"从输入-url-到加载完成的过程："}},[l("a",{staticClass:"header-anchor",attrs:{href:"#从输入-url-到加载完成的过程：","aria-hidden":"true"}},[v._v("#")]),v._v(" 从输入 URL 到加载完成的过程：")]),v._v(" "),l("ul",[l("li",[v._v("首先做 DNS 查询，如果这一步做了只能 DNS 解析的话，会提供访问速度最快的 IP 地址回来")]),v._v(" "),l("li",[v._v("接下来是 TCP 握手，应用层狐疑下发数据给传输层，这里 TCP 协议会指明两端的端口号，然后下发给网络层。网络层中的 IP 协议会确定 IP 地址，并指示了数据传输中如何跳转路由器。然后包会被再次封装到数据链路由层的数据帧结构中，最后就是物理层面的传输了")]),v._v(" "),l("li",[v._v("TCP 握手结束后会进行 TLS 握手，然后就开始正式的传输数据")]),v._v(" "),l("li",[v._v("数据在进入服务器之前，可能还会先经过负责负载均衡的服务器，它的作用就是将请求合理的分发到多台服务器上，这时假设服务器端会响应一个 HTML 文件")]),v._v(" "),l("li",[v._v("首先浏览器会判断状态码是什么，如果是 200 那就继续解析，如果是 400 或 500 的话就会报错，如果 300 的话会进行重定向，这里会有个重定向计数器，避免过多次的重定向，超过次数也会报错")]),v._v(" "),l("li",[v._v("浏览器开始解析文件，如果是 gzip 格式的话会先解压一下，然后通过文件的编码格式知道该如何去解码文件")]),v._v(" "),l("li",[v._v("文件解码成功后会正式开始渲染流程，贤惠根据 HTML 构建 DOM 树，有 CSS 的话会去构建 CSSOM 树。如果遇到 script 标签的话，会判断是否存在 async 或者 defer ，前者会并行下载并执行 JS ，后者会先下载文件，然后等待 HTML 解析完成后顺序执行，如果以上都没有，就会阻塞住渲染流程直到 JS 执行完毕。遇到文件下载的回去下载文件，这里如果使用 HTTP 2.0 洗衣的话会极大的提高多图的下载效率。")]),v._v(" "),l("li",[v._v("初始的 HTML 被完全加载和解析后会触发 DOMContentLoaded 事件")]),v._v(" "),l("li",[v._v("CSSOM 树和 DOM 树构建完成后会开始生成 Render 树，这一步就是确定页面元素的布局、样式等等诸多方面的东西。")]),v._v(" "),l("li",[v._v("在生成 Render 树的过程中，浏览器就开始调用 GPU 绘制，合成图层，将内容显示在屏幕上了")])]),v._v(" "),l("p",[v._v("我们从输入 URL 到显示页面这个过程中，涉及到网络层面的有三个主要过程：")]),v._v(" "),l("ul",[l("li",[v._v("DNS 解析")]),v._v(" "),l("li",[v._v("TCP 连接")]),v._v(" "),l("li",[v._v("HTTP 请求/响应")])]),v._v(" "),l("p",[v._v("对于 DNS 解析和 TCP 连接两个步骤，我们前端可以做的努力非常有限。相比之下，HTTP 连接这一层面的优化才是我们网络优化的核心。")]),v._v(" "),l("p",[v._v("HTTP 优化有两大方向：")]),v._v(" "),l("ul",[l("li",[v._v("减少请求次数")]),v._v(" "),l("li",[v._v("减少单词请求所花费的时间")])])])},[],!1,null,null,null);_.default=e.exports}}]);